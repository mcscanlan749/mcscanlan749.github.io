{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","buttonVal","this","equation","renderSquare","React","Component","Game","state","history","clear","count","current","slice","setState","answer","eval","concat","shift","calculations","reverse","map","move","handleClick","ReactDOM","render","document","getElementById"],"mappings":"s/CAMA,SAASA,OAAOC,GACf,OACE,qEAAQC,UAAU,SAASC,QAASF,EAAME,SAC1CF,EAAMG,O,IAKHC,M,+0BAESC,GAAY,IAAD,OACtB,OACF,2DAACN,OAAD,CACCI,MAAOE,EACPH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAOjC,OACE,sEACD,kEAAKJ,UAAU,eAAeK,KAAKN,MAAMO,UACtC,kEAAKN,UAAU,aACZK,KAAKE,aAAa,KAClBF,KAAKE,aAAa,KAClBF,KAAKE,aAAa,KACxBF,KAAKE,aAAa,MAEf,kEAAKP,UAAU,aACZK,KAAKE,aAAa,KAClBF,KAAKE,aAAa,KAClBF,KAAKE,aAAa,KACxBF,KAAKE,aAAa,MAEf,kEAAKP,UAAU,aACZK,KAAKE,aAAa,KAClBF,KAAKE,aAAa,KAClBF,KAAKE,aAAa,KACxBF,KAAKE,aAAa,MAErB,kEAAKP,UAAU,aACNK,KAAKE,aAAa,KAClBF,KAAKE,aAAa,KAClBF,KAAKE,aAAa,KACxBF,KAAKE,aAAa,W,GAtCHC,6CAAMC,WA6CpBC,K,6aACJ,cAAYX,GAAQ,IAAD,6MAClB,oBAAMA,IACDY,MAAQ,CACZC,QAAS,GACTC,OAAO,EACPC,MAAO,EACPC,QAAS,IANQ,E,gPAUPX,WACb,IAAIQ,QAAUP,KAAKM,MAAMC,QAAQI,QAC7BD,QAAUV,KAAKM,MAAMI,QACrBD,MAAQT,KAAKM,MAAMG,MACnBD,MAAQR,KAAKM,MAAME,MAEvB,GAAkB,MAAdT,UACHC,KAAKY,SAAS,CACZF,QAAS,UAEL,GAAkB,MAAdX,UAAkB,CAC3B,IAAIc,OAASC,KAAKJ,SAClBA,QAAUA,QAAU,IAAMG,OAC1BN,QAAUA,QAAQQ,OAAOL,SACzBF,OAAQ,EACRC,QACIA,MAAQ,IACXF,QAAQS,QAEThB,KAAKY,SAAS,CACbL,QAASA,QACTG,QAASG,OACTJ,MAAOA,MACPD,MAAOA,aAGLA,QACHE,QAAU,GACVF,OAAQ,GAETE,SAAoBX,UACpBC,KAAKY,SAAS,CACbF,QAASA,QACTF,MAAOA,U,+BAKE,IAAD,OAEJD,EAAUP,KAAKM,MAAMC,QACrBG,EAAUV,KAAKM,MAAMI,QAErBO,EAAeV,EAAQI,QAAQO,UAAUC,KAAI,SAAAC,GAClD,OACC,sEACEA,MAKD,OACE,kEAAKzB,UAAU,QACb,kEAAKA,UAAU,cACb,2DAACG,MAAD,CACPG,SAAUS,EACVd,QAAS,SAACG,GAAD,OAAe,EAAKsB,YAAYtB,OAGpC,kEAAKJ,UAAU,aACb,sEArBM,uBAsBN,iEAAIA,UAAU,WAAWsB,S,MAxEhBd,6CAAMC,WAgFzBkB,iDAASC,OACP,2DAAClB,KAAD,MACAmB,SAASC,eAAe,W","file":"static/js/main.c6206f41.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n//const e = React.createElement;\r\n\r\nfunction Square(props){\r\n\treturn (\r\n\t  <button className=\"square\" onClick={props.onClick}>\r\n\t\t{props.value}\r\n\t  </button>\r\n\t);\r\n}\r\n\r\nclass Board extends React.Component {\r\n  \r\n  renderSquare(buttonVal) {\r\n    return (\r\n\t\t<Square \r\n\t\t\tvalue={buttonVal}\r\n\t\t\tonClick={() => this.props.onClick(buttonVal)}\r\n\t\t/>\r\n\t);\t\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n\t    <div className=\"calculation\">{this.props.equation}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(\"7\")}\r\n          {this.renderSquare(\"8\")}\r\n          {this.renderSquare(\"9\")}\r\n\t\t  {this.renderSquare(\"/\")}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(\"4\")}\r\n          {this.renderSquare(\"5\")}\r\n          {this.renderSquare(\"6\")}\r\n\t\t  {this.renderSquare(\"*\")}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(\"1\")}\r\n          {this.renderSquare(\"2\")}\r\n          {this.renderSquare(\"3\")}\r\n\t\t  {this.renderSquare(\"-\")}\r\n        </div>\r\n\t\t<div className=\"board-row\">\r\n          {this.renderSquare(\"C\")}\r\n          {this.renderSquare(\"0\")}\r\n          {this.renderSquare(\"=\")}\r\n\t\t  {this.renderSquare(\"+\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\t  history: [],\r\n\t\t  clear: false,\r\n\t\t  count: 0,\r\n\t\t  current: \"\",\r\n\t  };\r\n  }\r\n  \r\n  handleClick(buttonVal){\r\n\tvar history = this.state.history.slice();\r\n\tvar current = this.state.current;\r\n\tvar count = this.state.count;\r\n\tvar clear = this.state.clear;\r\n\t  \r\n\tif (buttonVal === \"C\"){\r\n\t\tthis.setState({\r\n\t\t  current: \"\",\r\n\t  });\r\n\t} else if (buttonVal === \"=\"){\r\n\t  var answer = eval(current);\r\n\t  current = current + \"=\" + answer;\r\n\t  history = history.concat(current);\r\n\t  clear = true\r\n\t  count++;\r\n\t  if (count > 10){\r\n\t\t  history.shift();\r\n\t  }\r\n\t  this.setState({\r\n\t\t  history: history,\r\n\t\t  current: answer,\r\n\t\t  count: count,\r\n\t\t  clear: clear,\r\n\t  });\r\n\t} else {\r\n\t\tif (clear){\r\n\t\t\tcurrent = \"\";\r\n\t\t\tclear = false;\r\n\t\t}\r\n\t\tcurrent = current + buttonVal;\r\n\t\tthis.setState({\r\n\t\t\tcurrent: current,\r\n\t\t\tclear: clear\r\n\t\t});\r\n\t}\r\n  }\r\n  \r\n  render() {\r\n\tconst status = 'Calculator History:';\r\n\tconst history = this.state.history;\r\n\tconst current = this.state.current;\r\n\t\r\n\tconst calculations = history.slice().reverse().map(move => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{move}\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\t\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n\t\t\tequation={current}\r\n\t\t\tonClick={(buttonVal) => this.handleClick(buttonVal)}\r\n\t\t  />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol className=\"history\">{calculations}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}